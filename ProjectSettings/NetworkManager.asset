#!/usr/bin/env python3
"""
Example script to parse and modify a Unity YAML snippet for NetworkManager.
Requires PyYAML: pip install PyYAML
"""

import yaml

yaml_input = r"""
%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!149 &1
NetworkManager:
  m_ObjectHideFlags: 0
  m_DebugLevel: 0
  m_Sendrate: 15
  m_AssetToPrefab: {}
"""

def main():
    # Parse the YAML string
    data = list(yaml.safe_load_all(yaml_input))
    
    # 'data' is typically a list of top-level YAML documents. 
    # For this snippet, we expect only one.
    if not data:
        print("No data found in YAML.")
        return
    
    network_manager_obj = data[0]  # The first document
    # Example structure:
    # {
    #   'NetworkManager': {
    #       'm_ObjectHideFlags': 0,
    #       'm_DebugLevel': 0,
    #       'm_Sendrate': 15,
    #       'm_AssetToPrefab': {}
    #   }
    # }
    
    # Safely access the 'NetworkManager' sub-dict
    nm_content = network_manager_obj.get("NetworkManager", {})
    
    print("Current fields:")
    for k, v in nm_content.items():
        print(f"  {k}: {v}")
    
    # Modify something, e.g., set debug level to 2 (more verbose)
    nm_content["m_DebugLevel"] = 2
    
    # Increase sendrate
    nm_content["m_Sendrate"] = nm_content.get("m_Sendrate", 15) + 5
    
    print("\nModified fields:")
    for k, v in nm_content.items():
        print(f"  {k}: {v}")
    
    # Re-serialize back to YAML
    # We'll maintain the same structure and !u! tags for Unity
    updated_yaml = yaml.dump_all([network_manager_obj], 
                                 default_flow_style=False, 
                                 sort_keys=False)
    
    # The original lines: 
    #    %YAML 1.1
    #    %TAG !u! tag:unity3d.com,2011:
    # and the '--- !u!149 &1' are special Unity lines. 
    # We'll prepend them to keep the format consistent.
    final_yaml = (
        "%YAML 1.1\n"
        "%TAG !u! tag:unity3d.com,2011:\n"
        "--- !u!149 &1\n"
        + updated_yaml
    )
    
    print("\nRe-serialized YAML:\n")
    print(final_yaml)

if __name__ == "__main__":
    main()
